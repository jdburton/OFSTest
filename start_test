#!/usr/bin/python -u

#from OFSTest import *

from OFSTest import OFSTestMain
from OFSTest import OFSTestConfigMenu
from OFSTest import OFSTestConfigFile
from OFSTest import OFSTestConfig
import sys
import getopt
import os, errno
import logging

def mkdir_p(path):
    try:
        os.makedirs(path)
    except OSError as exc: # Python >2.5
        if exc.errno == errno.EEXIST and os.path.isdir(path):
            pass
        else: raise

# defaults
config_file = None
output_dir = "."
#print sys.argv
optlist, args = getopt.getopt(sys.argv[1:], 'htcf:d:')
#print optlist
#print args
cleanup = False
terminate_servers = False

for o, a  in optlist:

    if o == "-d":
        output_dir = a
    if o == "-f":
        config_file = a
    if o == "-h":
        print "start_test -f <path to config file> -d <output directory> config1=value1 config2=value2...configN=valueN"
        exit()
    if o == "-t":
        terminate_servers = True
    if o == "-c":
        cleanup = True
    

# Convert arguments to a dictionary
#argd = dict([my_arg.split('=') for my_arg in args])

#print "Output dir is %s, config file is %s" % (output_dir,config_file)
mkdir_p(output_dir)


#Add logging
# This will contain a list of all commands run by the testing system. VERY useful for debugging!
logging.basicConfig(filename=output_dir+"/ofsnode-commands.log",level=logging.INFO)

print "==================================================================="
print "Welcome to the OrangeFS Setup and Testing System"


if config_file != None:
    
    # Use the test driver with a config file.
    test_driver = OFSTestMain.OFSTestMain(OFSTestConfigFile.OFSTestConfigFile())
        
    #ugly python hack
    # set the config for the test using the config file.
    test_driver.setConfig(kwargs={"filename":config_file})
        
else:
    test_driver = OFSTestMain.OFSTestMain(OFSTestConfig.OFSTestConfig())

#Add additional configuration options to the test driver.
test_driver.config.addConfig(args)

# Print the configuration. 
test_driver.printConfig()

# set the instance-suffix to the output directory, if the output directory is set 
# but not the instance suffix.
if test_driver.config.instance_suffix == "" and output_dir != ".":
    test_driver.config.instance_suffix = "-"+output_dir

# Run in the output directory
os.chdir(output_dir)

# If we're running in "cleanup mode", clean up and exit.
if cleanup is True:
    rc = test_driver.cleanupCloudCluster()
    exit(rc)

# Ok, we're actually testing something. 
# initialize the network
rc = test_driver.initNetwork()

# If we have an orangefs.conf file, then check OFS.
if rc == 0 and test_driver.config.ofs_config_file is not None:
    rc = test_driver.checkOFS()

# if orangefs is not installed, set it up
if rc == 0:
    rc = test_driver.setupOFS()
    
# Ok, now we have a good OrangeFS installation. Let's test it!    
if rc == 0:
    rc = test_driver.runTest()

# Clean up.
if rc != 0 and test_driver.config.stop_on_failure == False:
    test_driver.doPostTest()

exit(rc)
